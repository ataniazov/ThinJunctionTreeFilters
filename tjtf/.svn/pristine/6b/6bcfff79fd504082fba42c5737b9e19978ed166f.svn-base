<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Tue Aug 19 09:38:10 PDT 2003 -->
<TITLE>
LinearizedSLAMFilter
</TITLE>
<META NAME="keywords" CONTENT="javaslam.slam.LinearizedSLAMFilter,LinearizedSLAMFilter class">
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="LinearizedSLAMFilter";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../javaslam/filter/LinearizedFilter.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../javaslam/util/ListSet.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="LinearizedSLAMFilter.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
javaslam.slam</FONT>
<BR>
Class LinearizedSLAMFilter</H2>
<PRE>
<A HREF="http://java.sun.com/j2se/1.4/docs/api/java/lang/Object.html">java.lang.Object</A>
  |
  +--<B>javaslam.slam.LinearizedSLAMFilter</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../javaslam/slam/NonlinearSLAMFilter.html">NonlinearSLAMFilter</A>, <A HREF="../../javaslam/slam/SLAMFilter.html">SLAMFilter</A></DD>
</DL>
<HR>
<DL>
<DT>public class <B>LinearizedSLAMFilter</B><DT>extends <A HREF="http://java.sun.com/j2se/1.4/docs/api/java/lang/Object.html">Object</A><DT>implements <A HREF="../../javaslam/slam/NonlinearSLAMFilter.html">NonlinearSLAMFilter</A></DL>

<P>
A nonlinear filter for the Simultaneous Localization and Mapping
 <font size="-1">SLAM</font> problem that uses a linear-Gaussian
 filter with a technique for linearizing nonlinear motion and
 measurement models.  For example, by coupling a <A HREF="../../javaslam/slam/KalmanSLAMFilter.html"><CODE>KalmanSLAMFilter</CODE></A> with <A HREF="../../javaslam/filter/ExtendedTransformation.html"><CODE>ExtendedTransformation</CODE></A>
 linearizations, one obtains the traditional Extended Kalman filter
 technique for <font size="-1">SLAM</font>.
<P>

<P>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../.././javaslam/slam/LGSLAMFilter.html">LGSLAMFilter</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#filter">filter</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The underlying linear-Gaussian SLAM filter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../.././javaslam/filter/LinearizationFactory.html">LinearizationFactory</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#linearization">linearization</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The factory for creating linearizations.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#LinearizedSLAMFilter(javaslam.slam.LGSLAMFilter)">LinearizedSLAMFilter</A></B>(<A HREF="../.././javaslam/slam/LGSLAMFilter.html">LGSLAMFilter</A>&nbsp;filter)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#LinearizedSLAMFilter(javaslam.slam.LGSLAMFilter, javaslam.filter.LinearizationFactory)">LinearizedSLAMFilter</A></B>(<A HREF="../.././javaslam/slam/LGSLAMFilter.html">LGSLAMFilter</A>&nbsp;filter,
                     <A HREF="../.././javaslam/filter/LinearizationFactory.html">LinearizationFactory</A>&nbsp;linearization)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../.././javaslam/prob/Variable.html">Variable</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#addLandmark(int, int)">addLandmark</A></B>(int&nbsp;id,
            int&nbsp;dim)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a new landmark to the map and returns its state variable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#contains(int)">contains</A></B>(int&nbsp;id)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return <code>true</code> if this filter contains the landmark
 with the supplied identifier.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#getLandmarkEstimate(int)">getLandmarkEstimate</A></B>(int&nbsp;id)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the filtered estimate of a landmark's state.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#getLandmarkId(javaslam.prob.Variable)">getLandmarkId</A></B>(<A HREF="../.././javaslam/prob/Variable.html">Variable</A>&nbsp;lm)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the identifier associated with the supplied landmark state
 variable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#getLandmarkIds()">getLandmarkIds</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the IDs of landmarks known to this filter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../.././javaslam/prob/Variable.html">Variable</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#getLandmarkVariable(int)">getLandmarkVariable</A></B>(int&nbsp;id)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the state variable associated with the landmark with the
 supplied identifier.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../.././javaslam/slam/LGSLAMFilter.html">LGSLAMFilter</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#getLGFilter()">getLGFilter</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the underlying linear-Gaussian filter, which can be used
 to access the filtered belief state.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#getNumLandmarks()">getNumLandmarks</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the number of landmarks known to this filter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#getRobotEstimate()">getRobotEstimate</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the filtered estimate of the robot's state.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../.././javaslam/prob/Variable.html">Variable</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#getRobotVariable()">getRobotVariable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the state variable associated with the robot.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#measurement(javaslam.filter.NoisyVectorFunction, javaslam.filter.NoisyVectorFunction, int, double[])">measurement</A></B>(<A HREF="../.././javaslam/filter/NoisyVectorFunction.html">NoisyVectorFunction</A>&nbsp;h,
            <A HREF="../.././javaslam/filter/NoisyVectorFunction.html">NoisyVectorFunction</A>&nbsp;hInv,
            int&nbsp;id,
            double[]&nbsp;z)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Performs a landmark measurement update assuming a known data
 association.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#motion(javaslam.filter.NoisyVectorFunction)">motion</A></B>(<A HREF="../.././javaslam/filter/NoisyVectorFunction.html">NoisyVectorFunction</A>&nbsp;f)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Performs a motion update.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../javaslam/slam/LinearizedSLAMFilter.html#odometry(javaslam.filter.NoisyVectorFunction, double[])">odometry</A></B>(<A HREF="../.././javaslam/filter/NoisyVectorFunction.html">NoisyVectorFunction</A>&nbsp;g,
         double[]&nbsp;y)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Performs an odometry update.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/j2se/1.4/docs/api/java/lang/Object.html">Object</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/j2se/1.4/docs/api/java/lang/Object.html#clone()">clone</A>, <A HREF="http://java.sun.com/j2se/1.4/docs/api/java/lang/Object.html#equals(java.lang.Object)">equals</A>, <A HREF="http://java.sun.com/j2se/1.4/docs/api/java/lang/Object.html#finalize()">finalize</A>, <A HREF="http://java.sun.com/j2se/1.4/docs/api/java/lang/Object.html#getClass()">getClass</A>, <A HREF="http://java.sun.com/j2se/1.4/docs/api/java/lang/Object.html#hashCode()">hashCode</A>, <A HREF="http://java.sun.com/j2se/1.4/docs/api/java/lang/Object.html#notify()">notify</A>, <A HREF="http://java.sun.com/j2se/1.4/docs/api/java/lang/Object.html#notifyAll()">notifyAll</A>, <A HREF="http://java.sun.com/j2se/1.4/docs/api/java/lang/Object.html#toString()">toString</A>, <A HREF="http://java.sun.com/j2se/1.4/docs/api/java/lang/Object.html#wait()">wait</A>, <A HREF="http://java.sun.com/j2se/1.4/docs/api/java/lang/Object.html#wait(long)">wait</A>, <A HREF="http://java.sun.com/j2se/1.4/docs/api/java/lang/Object.html#wait(long, int)">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Field Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="filter"><!-- --></A><H3>
filter</H3>
<PRE>
protected <A HREF="../.././javaslam/slam/LGSLAMFilter.html">LGSLAMFilter</A> <B>filter</B></PRE>
<DL>
<DD>The underlying linear-Gaussian SLAM filter.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="linearization"><!-- --></A><H3>
linearization</H3>
<PRE>
protected <A HREF="../.././javaslam/filter/LinearizationFactory.html">LinearizationFactory</A> <B>linearization</B></PRE>
<DL>
<DD>The factory for creating linearizations.
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="LinearizedSLAMFilter(javaslam.slam.LGSLAMFilter, javaslam.filter.LinearizationFactory)"><!-- --></A><H3>
LinearizedSLAMFilter</H3>
<PRE>
public <B>LinearizedSLAMFilter</B>(<A HREF="../.././javaslam/slam/LGSLAMFilter.html">LGSLAMFilter</A>&nbsp;filter,
                            <A HREF="../.././javaslam/filter/LinearizationFactory.html">LinearizationFactory</A>&nbsp;linearization)</PRE>
<DL>
<DD>Constructor.
<P>
<DT><B>Parameters:</B><DD><CODE>filter</CODE> - the underlying linear-Gaussian SLAM filter used for
               filtering<DD><CODE>linearization</CODE> - a linearization factory used to 
                      create linearizations of nonlinear models<DT><B>See Also:</B><DD><A HREF="../../javaslam/filter/ExtendedTransformation.html#getFactory()"><CODE>ExtendedTransformation.getFactory()</CODE></A>, 
<A HREF="../../javaslam/filter/UnscentedTransformation.html#getFactory()"><CODE>UnscentedTransformation.getFactory()</CODE></A></DL>
<HR>

<A NAME="LinearizedSLAMFilter(javaslam.slam.LGSLAMFilter)"><!-- --></A><H3>
LinearizedSLAMFilter</H3>
<PRE>
public <B>LinearizedSLAMFilter</B>(<A HREF="../.././javaslam/slam/LGSLAMFilter.html">LGSLAMFilter</A>&nbsp;filter)</PRE>
<DL>
<DD>Constructor.  The unscented transformation is used for linearization.
<P>
<DT><B>Parameters:</B><DD><CODE>filter</CODE> - the underlying linear-Gaussian SLAM filter used for
               filtering<DT><B>See Also:</B><DD><A HREF="../../javaslam/filter/UnscentedTransformation.html"><CODE>UnscentedTransformation</CODE></A></DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="motion(javaslam.filter.NoisyVectorFunction)"><!-- --></A><H3>
motion</H3>
<PRE>
public void <B>motion</B>(<A HREF="../.././javaslam/filter/NoisyVectorFunction.html">NoisyVectorFunction</A>&nbsp;f)</PRE>
<DL>
<DD>Performs a motion update.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../javaslam/slam/NonlinearSLAMFilter.html#motion(javaslam.filter.NoisyVectorFunction)">motion</A></CODE> in interface <CODE><A HREF="../../javaslam/slam/NonlinearSLAMFilter.html">NonlinearSLAMFilter</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>f</CODE> - the stochastic motion model</DL>
</DD>
</DL>
<HR>

<A NAME="odometry(javaslam.filter.NoisyVectorFunction, double[])"><!-- --></A><H3>
odometry</H3>
<PRE>
public void <B>odometry</B>(<A HREF="../.././javaslam/filter/NoisyVectorFunction.html">NoisyVectorFunction</A>&nbsp;g,
                     double[]&nbsp;y)</PRE>
<DL>
<DD>Performs an odometry update.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../javaslam/slam/NonlinearSLAMFilter.html#odometry(javaslam.filter.NoisyVectorFunction, double[])">odometry</A></CODE> in interface <CODE><A HREF="../../javaslam/slam/NonlinearSLAMFilter.html">NonlinearSLAMFilter</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>g</CODE> - the noisy odometry measurement model<DD><CODE>y</CODE> - the odometry measurement</DL>
</DD>
</DL>
<HR>

<A NAME="measurement(javaslam.filter.NoisyVectorFunction, javaslam.filter.NoisyVectorFunction, int, double[])"><!-- --></A><H3>
measurement</H3>
<PRE>
public void <B>measurement</B>(<A HREF="../.././javaslam/filter/NoisyVectorFunction.html">NoisyVectorFunction</A>&nbsp;h,
                        <A HREF="../.././javaslam/filter/NoisyVectorFunction.html">NoisyVectorFunction</A>&nbsp;hInv,
                        int&nbsp;id,
                        double[]&nbsp;z)</PRE>
<DL>
<DD>Performs a landmark measurement update assuming a known data
 association.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../javaslam/slam/NonlinearSLAMFilter.html#measurement(javaslam.filter.NoisyVectorFunction, javaslam.filter.NoisyVectorFunction, int, double[])">measurement</A></CODE> in interface <CODE><A HREF="../../javaslam/slam/NonlinearSLAMFilter.html">NonlinearSLAMFilter</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>h</CODE> - the stochastic landmark measurement model<DD><CODE>hInv</CODE> - the inverse of h with respect to the landmark state<DD><CODE>id</CODE> - the identifier of the landmark that was observed<DD><CODE>z</CODE> - the landmark measurement</DL>
</DD>
</DL>
<HR>

<A NAME="getLGFilter()"><!-- --></A><H3>
getLGFilter</H3>
<PRE>
public <A HREF="../.././javaslam/slam/LGSLAMFilter.html">LGSLAMFilter</A> <B>getLGFilter</B>()</PRE>
<DL>
<DD>Returns the underlying linear-Gaussian filter, which can be used
 to access the filtered belief state.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the underlying linear-Gaussian filter</DL>
</DD>
</DL>
<HR>

<A NAME="getRobotVariable()"><!-- --></A><H3>
getRobotVariable</H3>
<PRE>
public <A HREF="../.././javaslam/prob/Variable.html">Variable</A> <B>getRobotVariable</B>()</PRE>
<DL>
<DD>Gets the state variable associated with the robot.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../javaslam/slam/SLAMFilter.html#getRobotVariable()">getRobotVariable</A></CODE> in interface <CODE><A HREF="../../javaslam/slam/SLAMFilter.html">SLAMFilter</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getLandmarkVariable(int)"><!-- --></A><H3>
getLandmarkVariable</H3>
<PRE>
public <A HREF="../.././javaslam/prob/Variable.html">Variable</A> <B>getLandmarkVariable</B>(int&nbsp;id)</PRE>
<DL>
<DD>Gets the state variable associated with the landmark with the
 supplied identifier.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../javaslam/slam/SLAMFilter.html#getLandmarkVariable(int)">getLandmarkVariable</A></CODE> in interface <CODE><A HREF="../../javaslam/slam/SLAMFilter.html">SLAMFilter</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getLandmarkId(javaslam.prob.Variable)"><!-- --></A><H3>
getLandmarkId</H3>
<PRE>
public int <B>getLandmarkId</B>(<A HREF="../.././javaslam/prob/Variable.html">Variable</A>&nbsp;lm)</PRE>
<DL>
<DD>Gets the identifier associated with the supplied landmark state
 variable.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../javaslam/slam/SLAMFilter.html#getLandmarkId(javaslam.prob.Variable)">getLandmarkId</A></CODE> in interface <CODE><A HREF="../../javaslam/slam/SLAMFilter.html">SLAMFilter</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getNumLandmarks()"><!-- --></A><H3>
getNumLandmarks</H3>
<PRE>
public int <B>getNumLandmarks</B>()</PRE>
<DL>
<DD>Returns the number of landmarks known to this filter.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../javaslam/slam/SLAMFilter.html#getNumLandmarks()">getNumLandmarks</A></CODE> in interface <CODE><A HREF="../../javaslam/slam/SLAMFilter.html">SLAMFilter</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="addLandmark(int, int)"><!-- --></A><H3>
addLandmark</H3>
<PRE>
public <A HREF="../.././javaslam/prob/Variable.html">Variable</A> <B>addLandmark</B>(int&nbsp;id,
                            int&nbsp;dim)</PRE>
<DL>
<DD>Adds a new landmark to the map and returns its state variable.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../javaslam/slam/SLAMFilter.html#addLandmark(int, int)">addLandmark</A></CODE> in interface <CODE><A HREF="../../javaslam/slam/SLAMFilter.html">SLAMFilter</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getLandmarkIds()"><!-- --></A><H3>
getLandmarkIds</H3>
<PRE>
public int[] <B>getLandmarkIds</B>()</PRE>
<DL>
<DD>Returns the IDs of landmarks known to this filter.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../javaslam/slam/SLAMFilter.html#getLandmarkIds()">getLandmarkIds</A></CODE> in interface <CODE><A HREF="../../javaslam/slam/SLAMFilter.html">SLAMFilter</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="contains(int)"><!-- --></A><H3>
contains</H3>
<PRE>
public boolean <B>contains</B>(int&nbsp;id)</PRE>
<DL>
<DD>Return <code>true</code> if this filter contains the landmark
 with the supplied identifier.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../javaslam/slam/SLAMFilter.html#contains(int)">contains</A></CODE> in interface <CODE><A HREF="../../javaslam/slam/SLAMFilter.html">SLAMFilter</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getRobotEstimate()"><!-- --></A><H3>
getRobotEstimate</H3>
<PRE>
public double[] <B>getRobotEstimate</B>()</PRE>
<DL>
<DD>Returns the filtered estimate of the robot's state.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../javaslam/slam/SLAMFilter.html#getRobotEstimate()">getRobotEstimate</A></CODE> in interface <CODE><A HREF="../../javaslam/slam/SLAMFilter.html">SLAMFilter</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the filtered estimate of the robot's state</DL>
</DD>
</DL>
<HR>

<A NAME="getLandmarkEstimate(int)"><!-- --></A><H3>
getLandmarkEstimate</H3>
<PRE>
public double[] <B>getLandmarkEstimate</B>(int&nbsp;id)</PRE>
<DL>
<DD>Returns the filtered estimate of a landmark's state.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../javaslam/slam/SLAMFilter.html#getLandmarkEstimate(int)">getLandmarkEstimate</A></CODE> in interface <CODE><A HREF="../../javaslam/slam/SLAMFilter.html">SLAMFilter</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>id</CODE> - the identifier of the landmark
<DT><B>Returns:</B><DD>the filtered estimate of the landmark's state</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../javaslam/filter/LinearizedFilter.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../javaslam/util/ListSet.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="LinearizedSLAMFilter.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>

</BODY>
</HTML>
